" leader key
let mapleader = " "

" Plugins {{{
    call plug#begin('~/.vim/plugged')

    " Code {{{
        " autocomplete
        Plug 'jiangmiao/auto-pairs'
        Plug 'Valloric/YouCompleteMe'
        " multicursor
        Plug 'terryma/vim-multiple-cursors'
        " highlight
        Plug 'pangloss/vim-javascript'
        Plug 'maxmellon/vim-jsx-pretty'
        " search
        Plug 'easymotion/vim-easymotion'
        Plug 'haya14busa/incsearch.vim'
        Plug 'haya14busa/incsearch-easymotion.vim'
    " }}}

    " UI {{{
        " Project tree
        Plug 'scrooloose/nerdtree'
        " Theme
        Plug 'cocopon/iceberg.vim'
        " fuzzy finder
        Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
        Plug 'junegunn/fzf.vim'
        " linter
        Plug 'w0rp/ale'
        " Git
        Plug 'tpope/vim-fugitive'
        " Status line
        Plug 'vim-airline/vim-airline'
        Plug 'edkolev/tmuxline.vim'
    " }}}

    " Emacs plugin {{{
        Plug 'jpalardy/vim-slime'
    " }}}

    " Mati Green plugins {{{
        "Plug '~/.vim/plugged/vimclam'
    " }}}

    call plug#end()

    " Theme {{{
        set t_Co=256
        colorscheme iceberg
        set background=dark
    " }}}

    " Easy Align {{{
        xmap ga <Plug>(EasyAlign)
        nmap ga <Plug>(EasyAlign)
    " }}}

    " NERDTree {{{
        nmap <leader>n :NERDTreeToggle<cr>
        autocmd StdinReadPre * let s:std_in=1
        autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
        let g:NERDTreeDirArrowExpandable = '+'
        let g:NERDTreeDirArrowCollapsible = '-'
        let NERDTreeQuitOnOpen=1

        " NERDTress File highlighting
        function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
            exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='.  a:guifg
            exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
        endfunction

        call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
        call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
        call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
        call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
        call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
        call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
        call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
        call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
    " }}}

    " ALE {{{
        let g:ale_sign_error = '>'
        let g:ale_sign_warning = '>'
        let b:ale_fixers = ['prettier', 'eslint']
        let g:ale_fix_on_save = 1
        augroup FiletypeGroup
            autocmd!
            au BufNewFile,BufRead *.jsx set filetype=javascript.jsx
        augroup END
        let b:ale_linter_aliases = ['css', 'javascript']
        let b:ale_linters = ['stylelint', 'eslint']
    " }}}

    " FZF {{{
        command! -bang -nargs=* Ag call fzf#vim#grep('ag --nogroup --column --color ^', 1)
        nmap <leader>p :FZF<cr>
        nmap <leader>ag :Ag<cr>
    " }}}

    " REPL (vim-slime) {{{
        let g:slime_target = "tmux"
        let g:slime_paste_file = "$HOME/.slime_paste"
    " }}}

    " (search) easymotion {{{
        map f <Plug>(easymotion-overwin-f)
        map F <Plug>(easymotion-overwin-f2)
        map L <Plug>(easymotion-overwin-line)
        map W <Plug>(easymotion-overwin-w)
        map / <Plug>(incsearch-easymotion-/)
        map ? <Plug>(incsearch-easymotion-?)
        map g/ <Plug>(incsearch-easymotion-stay)
    " }}}

    " Airline {{{
        let g:airline_powerline_fonts=1
    " }}}

    " YCM {{{
        let g:ycm_show_diagnostics_ui = 0
    " }}}
" }}}

" Common {{{
    " Transparency
    hi Normal guibg=NONE ctermbg=NONE
    hi NonText guibg=NONE ctermbg=NONE
    hi EndOfBuffer guibg=NONE ctermbg=NONE
    hi SpecialKey guibg=NONE ctermbg=NONE

    " Clipboard
    set clipboard=unnamedplus

    " Swap files
    set noswapfile

    " Folding
    set foldenable
    set foldmethod=syntax

    " Numbers
    set number relativenumber
    augroup numbertoggle
      autocmd!
      autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
      autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
    augroup END
    set cursorline

    " Indent
    set expandtab
    set shiftwidth=4
    set softtabstop=4
    autocmd FileType html,css setlocal shiftwidth=2 tabstop=2
    set smartindent
    set autoindent
    map <F7> mzgg=G`z
    map <F8> :%s/[ ]\{1,\}$//g<cr>

    " Tabs
    nmap <c-t>n :tabnew<cr>
    nmap <c-t>q :tabclose<cr>
    nmap <c-t>h :tabprevious<cr>
    nmap <c-t>j :tabnext<cr>
    nmap <c-t>k :tabprevious<cr>
    nmap <c-t>l :tabnext<cr>

    " Windows
    nmap <c-h> :wincmd h<cr>
    nmap <c-j> :wincmd j<cr>
    nmap <c-k> :wincmd k<cr>
    nmap <c-l> :wincmd l<cr>

    " search
    set incsearch
    nmap <leader><leader> :noh<cr>

    " Drop buffers
    command! BD %bd|e#

    " realtime update
    command! Updatable set autoread | au CursorHold * checktime | call feedkeys("lh")
" }}}
